I would honestly ALWAYS rather have a remote repository,
rather than keep my files purely local, because I worship
at the alter of 'as many backups, in as many places as
possible'.  Hence my addiction to flash memory even given
it's rather terrible reliability/security.

Forcing manual remote pulls is a BEAUTIFUL feature
because it keeps you from accidentally overwriting a copy
of code that you want, just because you updated your
online repository wrong.  It also protects from malicious
or well-meaning outside sabotage by making sure you have
your own copy of the code that you can always use to 
reset the online one if it gets messed up.

Forks, clones, and branches all have slightly different
uses.  Branches seem to be pure internal designation; they
allow for seperation of content by idea or person, as is
logical in any particular case.  Cloneing seems the least
flexible to me, being mostly a way of moving files around.
Forks are a way to kidnap someone else's project, or let
them kidnap yours, without risking the integrity of the
original but still allowing that original to continue
its own evolution.

Having a copy of the last known state of the remote 
stored locally allows you to continue to work on it
even when you are offline.

There are a lot of really bad ways to collaborate.
For example, emailing the files back and forth and
hoping you're looking at the correct version at any
given time is a really bad way.  Using other collaboration
software is a good idea-- google docs, or something
aimed specifically at your intended purpose, 
whichever.